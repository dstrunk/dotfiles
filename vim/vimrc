if filereadable(expand("~/.vimrc.bundles"))
  source ~/.vimrc.bundles
endif

" Leader
let mapleader = " "

set backspace=2   " Backspace deletes like most programs in insert mode
set nobackup
set nowritebackup
set noswapfile
set history=50
set ruler         " show cursor position all the time
set showcmd       " display incomplete commands
set incsearch     " do incremental searching
set laststatus=2  " Always display status line
set autowrite     " Automatically :write before running commands

" Switch syntax highlighting on if terminal has colors
" Also switch on highlighting the last used search pattern
syntax on

" Keep good with the Ruby community! Use these settings:
" Softtabs, 2 spaces
set tabstop=2
set shiftwidth=2
set shiftround
set expandtab

" Make it obvious where 80 characters is
set textwidth=80
set colorcolumn=+1

" Numbers
set number
set numberwidth=5
set relativenumber

" Bigger text, better line spacing
set linespace=2
set guifont=Menlo:h14

highlight NonText guibg=#060606
highlight Folded  guibg=#0A0A0A guifg=#9090D0

" indentLine color
let g:indentLine_color_term = 239

" Embrace the vim
nnoremap <Left> :echoe "Use h"<CR>
nnoremap <Right> :echoe "Use l"<CR>
nnoremap <Up> :echoe "Use k"<CR>
nnoremap <Down> :echoe "Use j"<CR>

" Open new split panes to right and bottom
set splitbelow
set splitright

" Let's set a mapleader
let mapleader=','

" Resize vim within tmux
autocmd VimResized * :wincmd =

" Zoom a vim pane, <C-w> to re-balance
nnoremap <Leader>- :wincmd _<cr>:wincmd \|<cr>
nnoremap <Leader>= :wincmd =<cr>

" Ensure folded lines are preserved on save
autocmd BufWinLeave *.* mkview
autocmd BufWinEnter *.* silent loadview

" Automatically create directories if they don't exist
augroup Mkdir
  autocmd!
  autocmd BufWritePre *
    \ if !isdirectory(expand("<afile>:p:h")) |
        \ call mkdir(expand("<afile>:p:h"), "p") |
    \ endif
augroup END

" Vim + TMux <3
" RSpec vim tmux mappings
let g:rspec_command = "VtrSendCommandToRunner! bundle exec rspec {spec}"

map <Leader>t :call RunCurrentSpecFile()<CR>
map <Leader>s :call RunNearestSpec()<CR>
map <Leader>l :call RunLastSpec()<CR>
map <Leader>a :call RunAllSpecs()<CR>

map <Leader>fr :VtrFocusRunner<CR>

" Vim tmux integration
nmap <C-f> :VtrSendLinesToRunner<cr>
vmap <C-f> :VtrSendLinesToRunner<cr>

nmap <leader>osr :VtrOpenRunner { 'orientation': 'h', 'percentage': 50 }<cr>
nmap <leader>opr :VtrOpenRunner { 'orientation': 'h', 'percentage': 50, 'cmd': 'pry' }<cr>

nnoremap <leader>sd :VtrSendCtrlD<cr>
nnoremap <leader>sq :VtrSendCommandToRunner q<cr>
nnoremap <leader>sl :VtrSendCommandToRunner <cr>
nnoremap <leader>scu :VtrSendCommandToRunner <cr>

" The Silver Searcher
if executable('ag')
  " use ag over grep
  set grepprg=ag\ --nogroup\ --nocolor

  " use ag in CtrlP for listing files
  let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'

  " don't cache for CtrlP
  let g:ctrlp_use_caching = 0
endif

" CtrlP ignore files
let g:ctrlp_custom_ignore = '\v[\/](node_modules|target|dist)|(\.(swp|ico|git|svn))$'

" CtrlP + Magento <3
let g:ctrlp_max_files = 100000

let g:vimMagentoAuthor = "Daniel Strunk <dstrunk@wcbradley.com>"
let g:vimMagentoCopyright = "Copyright 2016"
let g:vimMagentoLicense = "GPL 3.0 <http:///www.gnu.org/licenses/gpl-3.0.en.html>"
let g:vimMagentoSignature = 0

" Whitespace things
highlight ExtraWhitespace ctermbg=red guibg=red
match ExtraWhitespace /\s\+$/
autocmd BufWinEnter * match ExtraWhitespace /\s\+$/
autocmd BufWinEnter * match ExtraWhitespace /\s\+\%#\@<!$/
autocmd BufWinEnter * match ExtraWhitespace /\s+$/
autocmd BufWinLeave * call clearmatches()

function! TrimWhiteSpace()
  %s/\s\+$//e
endfunction

autocmd BufWritePre *.rb :call TrimWhiteSpace()
autocmd BufWritePre *.php :call TrimWhiteSpace()

" Colors
set background=dark
colorscheme solarized

" Add filetype on for snippets
:filetype plugin on
let g:UltiSnipsExpandTrigger="<tab>"
let g:UltiSnipsJumpForwardTrigger="<tab>"
let g:UltiSnipsJumpBackwardTrigger="<s-tab>"
let g:snips_author="Daniel Strunk"
 
" autocomplete tags for HTML / XML
let g:closetag_filenames = "*.html,*.xhtml,*.phtml,*.xml"

" Be productive
nmap <leader>do :e todo.txt<cr>

" vim-airline configuration
let g:airline#extensions#branch#enabled = 1
let g:airline_powerline_fonts = 1

if !exists('g:airline_symbols')
  let g:airline_symbols = {}
endif

" unicode symbols
let g:airline_left_sep = '»'
let g:airline_left_sep = '▶'
let g:airline_right_sep = '«'
let g:airline_right_sep = '◀'
let g:airline_symbols.linenr = '␊'
let g:airline_symbols.linenr = '␤'
let g:airline_symbols.linenr = '¶'
let g:airline_symbols.branch = '⎇'
let g:airline_symbols.paste = 'ρ'
let g:airline_symbols.paste = 'Þ'
let g:airline_symbols.paste = '∥'
let g:airline_symbols.whitespace = 'Ξ'

" airline symbols
" let g:airline_left_sep = ''
" let g:airline_left_alt_sep = ''
" let g:airline_right_sep = ''
" let g:airline_right_alt_sep = ''
" let g:airline_symbols.branch = ''
" let g:airline_symbols.readonly = ''
" let g:airline_symbols.linenr = ''

" Git
let g:gitgutter_sign_column_always = 1
set updatetime=250
