snippet testcase "Vue spec" b
import { shallowMount, createLocalVue } from '@vue/test-utils'
import VueI18n from 'vue-i18n'
import expect from 'expect'
import axios from 'axios'
import MockAdapter from 'axios-mock-adapter'
import ${1:`!p snip.rv = re.match(r'.*?(?=\.)', fn).group().title()`} from '${2:components/}$1.vue'

describe('$1', () => {
  let localVue, messages, i18n, mock

  beforeEach(() => {
    localVue = createLocalVue()
    localVue.use(VueI18n)

    messages = {}
    i18n = new VueI18n({
      locale: 'en',
      messages,
    })

    mock = new MockAdapter(axios)
  })

  afterEach(() => {
    mock.restore()
  })

  ${0}
})
endsnippet

snippet test "Test" b
it('${1:is the one where}', (${2:done}) => {
  // messages = {}
  // mock.onGet('/resource').reply(200, {})

  let wrapper = shallowMount(${3:`!p snip.rv = re.match(r'.*?(?=\.)', fn).group().title()`}, { i18n, localVue })

  ${0}
})
endsnippet

snippet component "Vue component" b
<i18n>
{
  "en": {

  }
}
</i18n>

<template>
  <div>
    ${1}
  </div>
</template>

<script>
export default {
  props: [],
  data() {
    return {
      ${2}
    }
  },
  methods: {
  },
}
</script>
endsnippet
